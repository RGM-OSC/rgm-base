#!/bin/bash
#
# Copyright (C) 2019 RGM Team
# 2019-04-19 - v. 1.0 - Eric Belhomme <ebelhomme@fr.scc.com>
#
# LICENCE :
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
#########################################

function print_help() {

    echo -e " \e[1m-+- \e[34mRGM\e[39m updater tool -+-\e[0m\n"
    echo -e "Usage:\n\n  \e[1mrgmupdate -h -p -r -u -a -g <role:commit> -o <opts>\e[0m\n"
    echo -e "  -h               : this help message"
    echo -e "  -p               : update Ansible playbook from remote Git repo prior to run the update playbook"
    echo -e "  -r               : update Ansible roles from using Ansible Galaxy prior to run the update playbook"
    echo -e "  -d               : switch to dev (unstable) ansible playbook version"
    echo -e "  -u               : run the Ansible update playbook only"
    echo -e "  -a               : synonym of -p -r -u"
    echo -e "  -o <opts>        : pass extra parameters to ansible-playbook command line"
    echo -e "\n(c) 2019 RGM team - http://www.rgm-cloud.io"
}

function print_reqs() {
    python <<EOF
import yaml
v = yaml.load(open('${ANSIBLE_ROOT}/roles/requirements.yml'))
for item in v:
    print("{}?{}".format(item['name'], item['src']))
EOF
}

ANSIBLEPB=0
ANSIBLEGL=0
ANSIBLERN=0
ANSIBLEDV=0
#GITROLES=()
ANSIBLE_PLB_ARGS=
ANSIBLE_RGM_INSTALLER_REPO="https://framagit.org/rgm-community/ansible/rgm-installer.git"
ANSIBLE_ROOT="$(basename "$ANSIBLE_RGM_INSTALLER_REPO" | sed 's/\.git//')"
CURDIR=$(pwd)

while getopts hpruag:o: arg; do
    case "$arg" in
        h) print_help ;;
        p) ANSIBLEPB=1 ;;
        r) ANSIBLEGL=1 ;;
        u) ANSIBLERN=1 ;;
        d) ANSIBLEDV=1 ;;
        o) ANSIBLE_PLB_ARGS="$OPTARG" ;;
        a)
            ANSIBLEPB=1
            ANSIBLEGL=1
            ANSIBLERN=1
            ;;
        *) print_help;;
    esac
done

if [[ $ANSIBLEPB -eq 0 && $ANSIBLEGL -eq 0 && $ANSIBLERN -eq 0 ]]; then
    print_help
fi

if [ ! -e $ANSIBLE_ROOT ]; then
    echo -e "\e[31mAnsible root not found, force -p -r\e[0m\n"
    ANSIBLEPB=1
    ANSIBLEGL=1
    cd $(dirname $ANSIBLE_ROOT)
    git clone $ANSIBLE_RGM_INSTALLER_REPO
fi

if [ $ANSIBLEPB -eq 1 ]; then
    cd $ANSIBLE_ROOT
    git fetch --all
    git reset --hard
    git checkout master
    ANSIBLEGL=1
fi

if [ $ANSIBLEDV -eq 1 ]; then
    cd $ANSIBLE_ROOT
    git fetch --all
    git reset --hard
    git checkout dev
    ANSIBLEGL=1
fi

if [ $ANSIBLEGL -eq 1 ]; then
    cd $ANSIBLE_ROOT
    ansible-galaxy install -f -p ${ANSIBLE_ROOT}/roles -r ${ANSIBLE_ROOT}/roles/requirements.yml
fi

if [ $ANSIBLERN -eq 1 ]; then
    cd $ANSIBLE_ROOT
    ansible-playbook ${ANSIBLE_PLB_ARGS} rgm-installer.yml
fi
